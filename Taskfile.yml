# https://taskfile.dev

version: "3"

vars:
  APP_NAME: "excel-difference"
  APP_PATH: "excel_difference"
  PORT: "8000"
  HOST: "0.0.0.0"

tasks:
  default:
    desc: "Show available tasks"
    cmds:
      - task --list-all
    silent: true

  install:
    desc: "Install dependencies using uv"
    cmds:
      - uv sync
    silent: true

  install-dev:
    desc: "Install development dependencies"
    cmds:
      - uv sync --group dev
    silent: true

  lint:
    desc: "Run linting tools (flake8 and pylint)"
    cmds:
      - echo "Running flake8..."
      - uv run flake8 {{.APP_PATH}} --show-source --statistics --count --max-line-length=88 --extend-ignore=E203,W503
      - echo "Running pylint..."
      - uv run pylint {{.APP_PATH}}/*.py --disable=C0114,C0116
    silent: true

  lint-fix:
    desc: "Run linting with auto-fix where possible"
    cmds:
      - echo "Running flake8 with auto-fix..."
      - uv run flake8 {{.APP_PATH}} --max-line-length=88 --extend-ignore=E203,W503
    silent: true

  test:
    desc: "Run tests with pytest"
    cmds:
      - uv run pytest {{.APP_PATH}}/test_*.py -v --tb=short
    silent: true

  test-cov:
    desc: "Run tests with coverage report"
    cmds:
      - uv run pytest {{.APP_PATH}}/test_*.py -v --cov={{.APP_PATH}} --cov-report=html --cov-report=term
    silent: true

  test-watch:
    desc: "Run tests in watch mode"
    cmds:
      - uv run pytest {{.APP_PATH}}/test_*.py -v --tb=short -f
    silent: true

  check:
    desc: "Run all checks (lint + test)"
    cmds:
      - task: lint
      - task: test
    silent: true

  clean:
    desc: "Clean up generated files"
    cmds:
      - echo "Cleaning up..."
      - rm -rf .pytest_cache/
      - rm -rf htmlcov/
      - rm -rf .coverage
      - rm -rf build/
      - rm -rf dist/
      - rm -rf *.egg-info/
      - find . -type d -name "__pycache__" -exec rm -rf {} + 2>/dev/null || true
      - find . -name "*.pyc" -delete 2>/dev/null || true
    silent: true

  format:
    desc: "Format code with black"
    cmds:
      - uv run black {{.APP_PATH}} --line-length=88
    silent: true

  format-check:
    desc: "Check code formatting with black"
    cmds:
      - uv run black --check {{.APP_PATH}} --line-length=88
    silent: true

  type-check:
    desc: "Run type checking with mypy"
    cmds:
      - uv run mypy {{.APP_PATH}} --ignore-missing-imports
    silent: true

  build:
    desc: "Build the package"
    cmds:
      - uv run python -m build
    silent: true

  dev-setup:
    desc: "Set up development environment"
    cmds:
      - task: install-dev
      - echo "Development environment setup complete!"
    silent: true

  run-example:
    desc: "Run the CLI with example data"
    cmds:
      - uv run python -m {{.APP_PATH}}.cli data/excel1.xlsx data/excel2.xlsx output.xlsx --key-column 1
    silent: true

  run-gui:
    desc: "Run the GUI application"
    cmds:
      - uv run python -m {{.APP_PATH}}.gui
    silent: true

  build-exe:
    desc: "Build executable with PyInstaller"
    cmds:
      - uv run python pyinstaller.py
    silent: true

  build-exe-clean:
    desc: "Clean build artifacts and build executable"
    cmds:
      - uv run python pyinstaller.py clean
      - uv run python pyinstaller.py
    silent: true

  build-exe-dev:
    desc: "Install dev dependencies and build executable"
    cmds:
      - task: install-dev
      - task: build-exe
    silent: true

  build-exe-full:
    desc: "Full build process: clean, install deps, and build executable"
    cmds:
      - task: clean
      - task: install-dev
      - task: build-exe
    silent: true

  build-exe-debug:
    desc: "Build executable with debug information"
    cmds:
      - uv run pyinstaller --onefile --name=ExcelDiffGenerator --debug=all {{.APP_PATH}}/gui.py
    silent: true

  quality:
    desc: "Run all quality checks (format-check + lint + type-check)"
    cmds:
      - task: format-check
      - task: lint
      - task: type-check
    silent: true
